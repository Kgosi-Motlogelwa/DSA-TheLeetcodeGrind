Leetcode 566 Reshape the Matrix (EASY)

function matrixReshape(mat: number[][], r: number, c: number): number[][] {
    let matRows = mat.length
    let matCol = mat[0].length
    let newMatrix = []
    
    for(let i = 0; i < matRows; i++){
        for(let j = 0; j < matCol; j++){
            newMatrix.push(mat[i][j])
        }
    }
    console.log(newMatrix)
    
    let sizeOfNewMatrix = r*c
    if(sizeOfNewMatrix !== newMatrix.length){
        return mat
    }
    
    let finalMatrix: number[][] = []
    let startingPoint = 0
     for(let i = 0; i < r; i++){
        finalMatrix.push([])
         
        for(let j = 0; j < c; j++){
            finalMatrix[i].push(newMatrix[startingPoint]) 
            startingPoint++
        }
    }

    return finalMatrix
};

Leetcode 48 Rotate Image (Medium)

function rotate(matrix: number[][]): void {
   
    let ogNoRows = matrix.length
    let ogNoCols = matrix[0].length
    let newMatrix: number[][] = []
    
    for(let i = 0; i < ogNoRows; i++){
        for(let j = 0; j < ogNoCols; j++){
            if(!newMatrix[i]){
                newMatrix[i] = [0]
            }else{
                newMatrix[i].push(0)
            }
            
        }
    }
    for(let i = 0; i < ogNoRows; i++){
        for(let j = 0; j < ogNoCols; j++){
            newMatrix[i][j] = matrix[j][i]
            
        }
        newMatrix[i].reverse()
    }
    for(let i = 0; i < ogNoRows; i++){
        matrix.pop()
    }
        for(let i = 0; i < ogNoRows; i++){
        matrix.push(newMatrix[i])
    }

};

Leetcode 867, Transpose Matrix

function transpose(matrix: number[][]): number[][] {
    let finalArr = []
    let length = matrix[0].length

    for(let i = 0; i < length; i++){
        finalArr.push([])
        for(let j = 0; j < matrix.length; j++){
            // console.log(matrix[j][i])
            finalArr[i].push(matrix[j][i])
        }
        // console.log("===BREAK===")
    }
    return finalArr
};

~90th percentile for both time and space complexity, weird. 
No tricks, no. Rows on new finalArr will = no. Col in initial matrix. Push opposite i.e. [i][j] = [j][i]
